// file is autogenerated from canonical_tests.yaml
// don't edit this file

import Foundation
import XCTest
@testable import CookInSwift

class ParserCanonicalTests: XCTestCase {

        func testBasicDirection() {
            let recipe =
                """
                Add a bit of chilli

                """

            let result = try! Parser.parse(recipe) as! RecipeNode

            let steps = [
                
                StepNode(instructions: [
                    
                    DirectionNode("Add a bit of chilli"),
                ]),
            ]

            let node = RecipeNode(steps: steps)

            XCTAssertEqual(result, node)
        }
    
        func testMultiLineDirections() {
            let recipe =
                """
                Add a bit of chilli

                Add a bit of hummus

                """

            let result = try! Parser.parse(recipe) as! RecipeNode

            let steps = [
                
                StepNode(instructions: [
                    
                    DirectionNode("Add a bit of chilli"),
                ]),
                StepNode(instructions: [
                    
                    DirectionNode("Add a bit of hummus"),
                ]),
            ]

            let node = RecipeNode(steps: steps)

            XCTAssertEqual(result, node)
        }
    
        func testDirectionWithIngrident() {
            let recipe =
                """
                Add @chilli{3%items}, @ginger{10%g} and @milk{1%l}.

                """

            let result = try! Parser.parse(recipe) as! RecipeNode

            let steps = [
                
                StepNode(instructions: [
                    
                    DirectionNode("Add "),
                    IngredientNode(name: "chilli", amount: AmountNode(quantity: 3, units: "items")),
                    DirectionNode(", "),
                    IngredientNode(name: "ginger", amount: AmountNode(quantity: 10, units: "g")),
                    DirectionNode(" and "),
                    IngredientNode(name: "milk", amount: AmountNode(quantity: 1, units: "l")),
                    DirectionNode("."),
                ]),
            ]

            let node = RecipeNode(steps: steps)

            XCTAssertEqual(result, node)
        }
    }
